[default]
APP_NAME = "CookGPT"
DEBUG = false
EXTENSIONS = [
    "cookgpt.ext.config:init_app",
    "cookgpt.ext.cache:init_app",
    "cookgpt.ext.database:init_app",
    "cookgpt.ext.auth:init_app",
    # "cookgpt.ext.admin:init_app",
    "cookgpt.ext.redisflow:init_app",
    "cookgpt.ext.genai:init_app",
    "cookgpt.ext.imagekit:init_app",
]

# SENTRY
SENTRY_INTEGRATIONS = [
    "flask",
    "sqlalchemy",
    "logging",
    "celery",
    "redis",
]
SENTRY_IGNORED_LOGGERS = []
SENTRY_ENABLE_TRACING = true
SENTRY_PROFILES_SAMPLE_RATE = 1.0
SENTRY_TRACES_SAMPLE_RATE = 1.0
SENTRY_DEBUG = false
SENTRY_ATTACH_STACKTRACE = true
SENTRY_INCLUDE_SOURCE_CONTEXT = true
SENTRY_INCLUDE_LOCAL_VARIABLES = true
SENTRY_MAX_BREADCRUMBS = 100
SENTRY_SEND_DEFAULT_PII = true

# Caching
CACHE_DEFAULT_TIMEOUT = 300

# RedisFlow
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = true
CELERY_TASKS = [
    "cookgpt.chatbot.tasks"
]

# Logging
LOG_LEVEL = "DEBUG"
LOG_SHOW_TIME = false
LOG_HANDLER_CLASS = "rich.logging.RichHandler"


SQLALCHEMY_ENGINE_OPTIONS.isolation_level = "READ UNCOMMITTED"


BLUEPRINTS = [
    "cookgpt.auth:app",
    "cookgpt.chatbot:app",
]
PASSWORD_SCHEMES = ['pbkdf2_sha512', 'md5_crypt']

# OpenAPI
OPENAPI_VERSION = "3.0.2"
SPEC_FORMAT = "json"
LOCAL_SPEC_PATH = "openapi.json"
SYNC_LOCAL_SPEC = true
VALIDATION_ERROR_STATUS_CODE = 406
VALIDATION_ERROR_DESCRIPTION = "could not validate input data"
AUTH_ERROR_STATUS_CODE = 403
AUTH_ERROR_DESCRIPTION = "insufficient permissions"
AUTO_SERVERS = true
SERVERS = [
    {name = "live", url = "https://mkpbackend-fe1c9f5599b1.herokuapp.com"},
    {name = "local", url = "http://localhost:8000"}
]

# AI
MAX_CHAT_COST = 2500
MAX_RESPONSE_TOKENS = 200
CHATBOT_MEMORY_KEY = 'thread'
CHATBOT_MEMORY_HUMAN_PREFIX = 'Human'
CHATBOT_MEMORY_AI_PREFIX = 'CookGPT'
CHATBOT_CHAIN_INPUT_KEY = "query"
USE_GEMINI = true
LANGCHAIN_VERBOSE = false
LLM_STREAMING = true
OPENAI_CALLBACK_RAISE_ERROR = true
GENAI_TRANSPORT = "grpc"

# Flask
FLASK_ADMIN_TEMPLATE_MODE = "bootstrap3"
FLASK_ADMIN_SWATCH = 'cerulean'


# JWT-Extended
JWT_TOKEN_LOCATION = ['headers']
JWT_HEADER_NAME = 'Authorization'
JWT_ERROR_MESSAGE_KEY = 'message'

# Cross Origin Resource Sharing
FLASK_CORS_ALLOW_HEADERS = '*'
FLASK_CORS_EXPOSE_HEADERS = '*'
FLASK_CORS_ORIGINS = '*'
FLASK_CORS_SUPPORTS_CREDENTIALS = true

[development]
DEBUG = true
JWT_ACCESS_TOKEN_EXPIRES = {days = 1}
JWT_ACCESS_TOKEN_LEEWAY = {hours = 12}
JWT_REFRESH_TOKEN_EXPIRES = {days = 5}
JWT_REFRESH_TOKEN_LEEWAY = {minutes = 15}
SQLALCHEMY_ENGINE_OPTIONS.connect_args.connect_timeout = 60

EXTENSIONS = [
    "dynaconf_merge",
    "cookgpt.ext.cors:init_app",
]


[testing]
TESTING = true
DEBUG = true
LOG_LEVEL = "WARNING"
JWT_ACCESS_TOKEN_EXPIRES = {minutes = 2}
JWT_ACCESS_TOKEN_LEEWAY = {minutes = 1}
JWT_REFRESH_TOKEN_EXPIRES = {minutes = 30}
JWT_REFRESH_TOKEN_LEEWAY = {minutes = 5}
USE_GEMINI = false

[production]
LOG_LEVEL = "INFO"
JWT_ACCESS_TOKEN_EXPIRES = {days = 7}
JWT_ACCESS_TOKEN_LEEWAY = {days = 5}
JWT_REFRESH_TOKEN_EXPIRES = {days = 30}
JWT_REFRESH_TOKEN_LEEWAY = {minutes = 30}
SQLALCHEMY_ENGINE_OPTIONS.connect_args.connect_timeout = 60
EXTENSIONS = [
    "dynaconf_merge",
    "cookgpt.ext.cors:init_app"
]
