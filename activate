#!/usr/bin/env bash
# activate the virtualenv
# if it's not already activated
if [ "$1" = 'production' ]; then
	DOTENV_FILE=".env.production"
elif [ "$1" = 'development' ] || [ -z "$1" ]; then
	DOTENV_FILE=".env.development"
elif [ "$1" = 'testing' ]; then
	DOTENV_FILE=".env.testing"
fi


# if the virtualenv is already activated
# then reactivate it
if ! [ -z "$VIRTUAL_ENV" ]; then
	deactivate
	unalias deactivate 2>/dev/null
fi


if [ -f ".venv" ]; then
	ENV_PREFIX="$(cat .venv)"
else
	ENV_PREFIX="$(pipenv --venv 2>/dev/null)"
	echo "$ENV_PREFIX" > .venv
fi

export ENV_PREFIX

echo "Activating virtualenv $(basename $ENV_PREFIX)"

# set the pipenv active flag
export PIPENV_ACTIVE=1

# activate virtualenv
source $ENV_PREFIX/bin/activate

# create a wrapper around the `deactivate` command
# to unset the PIPENV_ACTIVE flag
alias deactivate="unset PIPENV_ACTIVE ENV_PREFIX; unalias deactivate; deactivate"

# load env vars
export $(cat $DOTENV_FILE | xargs)
unset DOTENV_FILE